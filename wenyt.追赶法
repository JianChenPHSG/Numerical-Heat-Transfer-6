MODULE share_data
REAL::L,rou,lamda,u,fai0,faiL  !fai0,faiL边界条件
save
INTEGER::K      !网格数
REAL::x         !网格间距
REAL::P,D,F     !P=F/D,F=rou*u,D=lamda/x
END MODULE                     !共享数据

REAL FUNCTION select_bigger(x,y)   !max()函数
IMPLICIT NONE
REAL,INTENT(IN)::x,y
IF(x>y) THEN
select_bigger=x
ELSE  
select_bigger=y
END IF
END FUNCTION
    
REAL FUNCTION A1(P)               !三种系数函数,中心差分格式
IMPLICIT NONE
REAL,INTENT(IN)::P
REAL::select_bigger
A1=1.0-0.5*ABS(P)+select_bigger(-P,0.0)
END FUNCTION A1
    
REAL FUNCTION A2(P)              !迎风格式
IMPLICIT NONE
REAL,INTENT(IN)::P
REAL::select_bigger
A2=1.0+select_bigger(-P,0.0)
END FUNCTION A2


REAL FUNCTION A3(P)              !混合格式
IMPLICIT NONE
REAL,INTENT(IN)::P
REAL::select_bigger
A3=select_bigger(0.0,1.0-0.5*ABS(P))+select_bigger(-P,0.0)
    END FUNCTION A3   


SUBROUTINE pattern_chasing(fai,A)     !追赶法
USE share_data
IMPLICIT NONE
REAL,INTENT(OUT)::fai(K)
REAL,EXTERNAL::A
REAL::diag(K),right(K-1),left(K-1),b(K)
INTEGER::i
diag(1)=2.0*A(P/2.0)+A(P)+P
right(1)=-A(P)
b(1)=2.0*(P/2.0+A(P/2.0))*fai0
diag(K)=A(P)+2.0*A(P/2.0)+P
left(K-1)=-P-A(P)
b(K)=2.0*A(P/2.0)*faiL
DO i=2,K-1
diag(i)=2*A(P)+P
right(i)=-A(P)
left(i-1)=-A(P)-P
b(i)=0
END DO
DO i=1,K-1
left(i)=left(i)/diag(i)
diag(i+1)=diag(i+1)-left(i)*right(i)
b(i+1)=b(i+1)-left(i)*b(i)
end do
fai(K)=b(K)/diag(K)
DO i=K-1,1,-1
fai(i)=(b(i)-right(i)*fai(i+1))/diag(i)  
end do
END SUBROUTINE

PROGRAM Convection_diffusion       
USE share_data
IMPLICIT NONE
REAL,EXTERNAL::A1,A2,A3
REAL::j
REAL,ALLOCATABLE,DIMENSION(:)::z
REAL,ALLOCATABLE,DIMENSION(:)::fai1,fai2,fai3,fai4     !1中心差分，2迎风格式，3混合格式 4解析解
REAL::time_begin,time_over
WRITE(*,*)'输入网格数'
READ(*,*) K
WRITE(*,*)'输入速度'
READ(*,*)u
CALL CPU_TIME(time_begin)
ALLOCATE(fai1(K))
ALLOCATE(fai2(K))
ALLOCATE(fai3(K))
ALLOCATE(fai4(K))
ALLOCATE(z(K))
L=1.0
rou=1.0
lamda=0.1
fai0=1.0
faiL=0.0
x=L/K
F=rou*u
D=lamda/x
P=F/D
CALL pattern_chasing(fai1,A1)    !追赶法，求三种格式线性方程组
CALL pattern_chasing(fai2,A2)
CALL pattern_chasing(fai3,A3)
DO j=1,K
z(j)=(j-0.5)*x
fai4(j)=1.0-(exp(F*z(j)/lamda)-1.0)/(exp(F*L/lamda)-1.0)
end DO
CALL CPU_TIME(time_over)
WRITE(*,*) '    坐标     ', '    中心差分    ','  迎风格式    ','    混合格式    ','  解析解    '
Do j=1,K
WRITE(*,*) z(j),fai1(j),fai2(j),fai3(j),fai4(j)
END DO
open(1,file='test.out',mode ='write')
WRITE(1,*) '    坐标     ', '    中心差分    ','  迎风格式    ','    混合格式    ','  解析解    '
Do j=1,K
WRITE(1,*) z(j),fai1(j),fai2(j),fai3(j),fai4(j)
END DO
close(1)
WRITE(*,*)'运行时间',time_over-time_begin
DEALLOCATE(z)
DEALLOCATE(fai1)
DEALLOCATE(fai2)
DEALLOCATE(fai3)
DEALLOCATE(fai4)
END PROGRAM convection_diffusion
    
